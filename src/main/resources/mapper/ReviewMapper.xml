<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mealme.mapper.ReviewMapper">
<!-- 컨설팅 -->
    <select id="selectConsultingInfo" resultType="ConsultingReviewVo">
        SELECT CQ.CONSULTING_REQUEST_NUMBER, CQ.USER_NUMBER, CQ.COMPANY_NUMBER, CQ.CONSULTING_REQUEST_DATE, C.CONSULTING_COMMENT,
               CQ.CONSULTING_REQUEST_COMMENT, CF.FILE_NAME, CF.FILE_UUID,CF.FILE_UPLOAD_PATH
        FROM TBL_CONSULTING_REQUEST CQ JOIN TBL_CONSULTING C
        ON CQ.CONSULTING_REQUEST_NUMBER = C.CONSULTING_REQUEST_NUMBER
        LEFT JOIN TBL_COMPANY_FILE CF
        ON CQ.COMPANY_NUMBER = CF.COMPANY_NUMBER
        WHERE C.CONSULTING_REQUEST_NUMBER = #{consultingRequestNumber}
    </select>

    <insert id="insertConsultingReview">
        <selectKey keyProperty="reviewNumber" order="BEFORE" resultType="long">
            SELECT SEQ_CONSULTING_REVIEW.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_CONSULTING_REVIEW (REVIEW_NUMBER, CONSULTING_REQUEST_NUMBER, USER_NUMBER, COMPANY_NUMBER, REVIEW_DATE,
        REVIEW_CONTENT, REVIEW_GRADE)
        VALUES (#{reviewNumber}, #{consultingRequestNumber}, #{userNumber}, #{companyNumber}, SYSDATE, #{reviewContent}, #{reviewGrade})
    </insert>

    <select id="selectConsultingList" resultType="ConsultingReviewVo">
        SELECT CONSULTING_REQUEST_NUMBER, USER_NUMBER, COMPANY_NUMBER,REVIEW_NUMBER,
               CONSULTING_REQUEST_DATE ,CONSULTING_COMMENT, CONSULTING_REQUEST_COMMENT,
               FILE_NAME, FILE_UUID,FILE_UPLOAD_PATH, REVIEW_DATE, REVIEW_CONTENT, REVIEW_GRADE,COMPANY_NAME
        FROM
            (SELECT ROWNUM AS RNUM,CONSULTING_REQUEST_NUMBER, USER_NUMBER, COMPANY_NUMBER,REVIEW_NUMBER,
                    CONSULTING_REQUEST_DATE ,CONSULTING_COMMENT, CONSULTING_REQUEST_COMMENT,
                    FILE_NAME, FILE_UUID,FILE_UPLOAD_PATH, REVIEW_DATE, REVIEW_CONTENT, REVIEW_GRADE,COMPANY_NAME
             FROM
                 (SELECT CQ.CONSULTING_REQUEST_NUMBER, CQ.USER_NUMBER, CQ.COMPANY_NUMBER,CR.REVIEW_NUMBER,
                         CQ.CONSULTING_REQUEST_DATE ,C.CONSULTING_COMMENT, CQ.CONSULTING_REQUEST_COMMENT,
                         CF.FILE_NAME,CF.FILE_UUID,CF.FILE_UPLOAD_PATH, CR.REVIEW_DATE, CR.REVIEW_CONTENT, CR.REVIEW_GRADE, CO.COMPANY_NAME
                  FROM TBL_CONSULTING_REQUEST CQ JOIN TBL_CONSULTING C
                                                      ON CQ.CONSULTING_REQUEST_NUMBER = C.CONSULTING_REQUEST_NUMBER
                                                 LEFT JOIN TBL_COMPANY_FILE CF
                                                           ON CQ.COMPANY_NUMBER = CF.COMPANY_NUMBER
                                                 JOIN TBL_CONSULTING_REVIEW CR
                                                      ON CQ.CONSULTING_REQUEST_NUMBER = CR.CONSULTING_REQUEST_NUMBER
                                                JOIN TBL_COMPANY CO
                                                    ON CO.COMPANY_NUMBER = CF.COMPANY_NUMBER
                  WHERE CQ.USER_NUMBER = #{userNumber}
                  ORDER BY CQ.CONSULTING_REQUEST_DATE DESC) S1
         <![CDATA[
             WHERE ROWNUM <= #{criteria.page} * #{criteria.amount}
         ]]>
    ) S2
        WHERE RNUM > (#{criteria.page} - 1) * #{criteria.amount}
        ORDER BY CONSULTING_REQUEST_NUMBER DESC
    </select>

    <select id="selectConsultingReviewInfo" resultType="ConsultingReviewVo">
        SELECT CQ.CONSULTING_REQUEST_NUMBER, CQ.USER_NUMBER, CQ.COMPANY_NUMBER, CR.REVIEW_NUMBER,
               CQ.CONSULTING_REQUEST_DATE ,C.CONSULTING_COMMENT,CQ.CONSULTING_REQUEST_COMMENT,
               CF.FILE_NAME, CF.FILE_UPLOAD_PATH, CF.FILE_UUID,CR.REVIEW_DATE, CR.REVIEW_CONTENT,CR.REVIEW_GRADE
        FROM TBL_CONSULTING_REQUEST CQ JOIN TBL_CONSULTING C
        ON CQ.CONSULTING_REQUEST_NUMBER = C.CONSULTING_REQUEST_NUMBER
        LEFT JOIN TBL_COMPANY_FILE CF
        ON CQ.COMPANY_NUMBER = CF.COMPANY_NUMBER
        JOIN TBL_CONSULTING_REVIEW CR
        ON CQ.CONSULTING_REQUEST_NUMBER = CR.CONSULTING_REQUEST_NUMBER
        WHERE CR.REVIEW_NUMBER = #{reviewNumber}
    </select>

    <update id="updateConsultingReview">
        update TBL_CONSULTING_REVIEW
        SET  REVIEW_DATE = SYSDATE,REVIEW_CONTENT = #{reviewContent}, REVIEW_GRADE = #{reviewGrade}
        WHERE REVIEW_NUMBER = #{reviewNumber}
    </update>

    <delete id="deleteConsultingReview">
        DELETE FROM TBL_CONSULTING_REVIEW
        WHERE REVIEW_NUMBER = #{reviewNumber}
    </delete>

<!-- 컨설팅 구매내역 리스트 -->
    <select id="selectOrderConsultingList" resultType="ConsultingPayVo">
        SELECT USER_NUMBER, CONSULTING_REQUEST_NUMBER, COMPANY_NUMBER, FILE_NAME, FILE_UPLOAD_PATH,FILE_UUID, COMPANY_NAME,
               CONSULTING_REQUEST_COMMENT, CONSULTING_REQUEST_DATE, COMPANY_CEO_NAME, CONSULTING_CONDITION
        FROM
        (SELECT ROWNUM AS RNUM, USER_NUMBER, CONSULTING_REQUEST_NUMBER, COMPANY_NUMBER, FILE_NAME, FILE_UPLOAD_PATH,FILE_UUID, COMPANY_NAME,
        CONSULTING_REQUEST_COMMENT, CONSULTING_REQUEST_DATE, COMPANY_CEO_NAME, CONSULTING_CONDITION
        FROM
        (SELECT CR.USER_NUMBER, CR.CONSULTING_REQUEST_NUMBER, CM.COMPANY_NUMBER, CF.FILE_NAME, CF.FILE_UPLOAD_PATH,CF.FILE_UUID, CM.COMPANY_NAME,
        CR.CONSULTING_REQUEST_COMMENT, CR.CONSULTING_REQUEST_DATE, CM.COMPANY_CEO_NAME, CR.CONSULTING_CONDITION
        FROM TBL_COMPANY CM JOIN TBL_CONSULTING_REQUEST CR
        ON CM.COMPANY_NUMBER = CR.COMPANY_NUMBER
        LEFT JOIN TBL_COMPANY_FILE CF
        ON CF.COMPANY_NUMBER = CM.COMPANY_NUMBER
        WHERE CR.USER_NUMBER = #{userNumber}
        ORDER BY CR.CONSULTING_REQUEST_DATE DESC
        ) S1
        <![CDATA[
        WHERE ROWNUM <= #{criteria.page} * #{criteria.amount}
        ]]>
        ) S2
        WHERE RNUM > (#{criteria.page} - 1) * #{criteria.amount}
    </select>

    <select id="orderConsultingListCount" resultType="_int">
        SELECT COUNT(CONSULTING_REQUEST_NUMBER) FROM TBL_CONSULTING_REQUEST
        WHERE USER_NUMBER = #{userNumber}
    </select>

    <update id="updateConsultingCondition">
        UPDATE TBL_CONSULTING_REQUEST
        SET CONSULTING_CONDITION = 2
        WHERE CONSULTING_REQUEST_NUMBER = #{consultingRequestNumber}
    </update>
<!--  상품  -->
    <select id="selectOrderProductList" resultType="ProductPayListVo">
        SELECT ORDER_NUMBER, USER_NUMBER, PRODUCT_NUMBER, ORDER_COUNT, ORDER_DATE,
               ORDER_CONDITION_CODE, CONDITION_CODE_NAME,
               PRODUCT_NAME, PRODUCT_SELLER, PRODUCT_EXPLANATION, PRODUCT_PRICE, FILE_NAME, FILE_UUID, FILE_UPLOAD_PATH
        FROM(SELECT ROWNUM AS RNUM,ORDER_NUMBER, USER_NUMBER, PRODUCT_NUMBER, ORDER_COUNT, ORDER_DATE,
               ORDER_CONDITION_CODE, CONDITION_CODE_NAME,
               PRODUCT_NAME, PRODUCT_SELLER, PRODUCT_EXPLANATION, PRODUCT_PRICE, FILE_NAME, FILE_UUID,FILE_UPLOAD_PATH
        FROM(SELECT O.ORDER_NUMBER, O.USER_NUMBER, O.PRODUCT_NUMBER,O.ORDER_COUNT, O.ORDER_DATE,
               OC.ORDER_CONDITION_CODE, OC.CONDITION_CODE_NAME,
               P.PRODUCT_NAME, P.PRODUCT_SELLER, P.PRODUCT_EXPLANATION, P.PRODUCT_PRICE, F.FILE_NAME,F.FILE_UUID, F.FILE_UPLOAD_PATH
               FROM TBL_ORDER O
               JOIN TBL_ORDER_CONDITION OC
               ON O.ORDER_CONDITION_CODE = OC.ORDER_CONDITION_CODE
               JOIN TBL_PRODUCT P
               ON O.PRODUCT_NUMBER = P.PRODUCT_NUMBER
               LEFT JOIN
               (SELECT FILE_NAME, FILE_UPLOAD_PATH, FILE_UUID,PRODUCT_NUMBER
               FROM (
               SELECT FILE_NAME,FILE_UPLOAD_PATH,FILE_UUID,PRODUCT_NUMBER,
               RANK() OVER (PARTITION BY PRODUCT_NUMBER ORDER BY FILE_NUMBER) RK
               FROM TBL_PRODUCT_FILE
               )
               WHERE RK = 1
               ) F
               ON O.PRODUCT_NUMBER = F.PRODUCT_NUMBER
               WHERE USER_NUMBER = #{userNumber}
               ORDER BY O.ORDER_DATE DESC
        )S1
         <![CDATA[
        WHERE ROWNUM <= #{criteria.page} * #{criteria.amount}
         ]]>
        ) S2
        WHERE RNUM > (#{criteria.page} - 1) * #{criteria.amount}
    </select>

    <select id="orderProductListCount" resultType="_int">
        SELECT COUNT(ORDER_NUMBER) FROM TBL_ORDER
        WHERE USER_NUMBER = #{userNumber}
    </select>

<!-- 리뷰를 작성하기 위해 구매 상품 정보 받아오기 -->
    <select id="selectProductInfo" resultType="ProductReviewVo">
        select O.USER_NUMBER, O.ORDER_NUMBER, P.PRODUCT_NUMBER,P.PRODUCT_NAME, O.ORDER_DATE, F.FILE_NAME,F.FILE_UUID, F.FILE_UPLOAD_PATH
        FROM TBL_ORDER O
        JOIN TBL_PRODUCT P
        ON O.PRODUCT_NUMBER = P.PRODUCT_NUMBER
        LEFT JOIN
        (SELECT FILE_NAME, FILE_UPLOAD_PATH,FILE_UUID, PRODUCT_NUMBER
        FROM (
        SELECT FILE_NAME,FILE_UPLOAD_PATH,FILE_UUID,PRODUCT_NUMBER,
        RANK() OVER (PARTITION BY PRODUCT_NUMBER ORDER BY FILE_NUMBER) RK
        FROM TBL_PRODUCT_FILE
        )
        WHERE RK = 1
        ) F
        ON P.PRODUCT_NUMBER = F.PRODUCT_NUMBER
        WHERE ORDER_NUMBER = #{orderNumber}
    </select>

    <insert id="insertProductReview">
        <selectKey keyProperty="reviewNumber" order="BEFORE" resultType="long">
            SELECT SEQ_ORDER_REVIEW.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_ORDER_REVIEW (REVIEW_NUMBER, PRODUCT_NUMBER, USER_NUMBER, ORDER_NUMBER, REVIEW_DATE, REVIEW_CONTENT,REVIEW_GRADE)
        VALUES (#{reviewNumber}, #{productNumber}, #{userNumber}, #{orderNumber}, SYSDATE, #{reviewContent}, #{reviewGrade})
    </insert>

    <update id="updateOrderCondition">
        UPDATE TBL_ORDER
        SET ORDER_CONDITION_CODE = 13
        WHERE ORDER_NUMBER = #{orderNumber}
    </update>

<!--  리뷰 리스트 뽑기  -->
    <select id="selectProductReviewList" resultType="ProductReviewVo">
        SELECT ORDER_NUMBER, USER_NUMBER, PRODUCT_NUMBER, REVIEW_NUMBER ,
               ORDER_DATE, PRODUCT_NAME, REVIEW_DATE, REVIEW_CONTENT, REVIEW_GRADE,
               FILE_NAME, FILE_UPLOAD_PATH,FILE_UUID
        FROM(
                SELECT ROWNUM AS RNUM,ORDER_NUMBER, USER_NUMBER, PRODUCT_NUMBER, REVIEW_NUMBER ,
                       ORDER_DATE, PRODUCT_NAME, REVIEW_DATE, REVIEW_CONTENT, REVIEW_GRADE,
                       FILE_NAME, FILE_UPLOAD_PATH,FILE_UUID
                FROM(SELECT O.ORDER_NUMBER, O.USER_NUMBER, O.PRODUCT_NUMBER, ORV.REVIEW_NUMBER ,
                            O.ORDER_DATE, P.PRODUCT_NAME, ORV.REVIEW_DATE, ORV.REVIEW_CONTENT, ORV.REVIEW_GRADE,
                            F.FILE_NAME, F.FILE_UPLOAD_PATH,F.FILE_UUID
                     FROM TBL_ORDER_REVIEW ORV
                              JOIN TBL_ORDER O ON ORV.ORDER_NUMBER = O.ORDER_NUMBER
                              JOIN TBL_PRODUCT P ON O.PRODUCT_NUMBER = P.PRODUCT_NUMBER
                              LEFT JOIN
                          (SELECT FILE_NAME, FILE_UPLOAD_PATH,FILE_UUID, PRODUCT_NUMBER
                           FROM (SELECT FILE_NAME,FILE_UPLOAD_PATH,FILE_UUID,PRODUCT_NUMBER,
                                        RANK() OVER (PARTITION BY PRODUCT_NUMBER ORDER BY FILE_NUMBER) RK
                                 FROM TBL_PRODUCT_FILE)
                           WHERE RK = 1) F
                          ON P.PRODUCT_NUMBER = F.PRODUCT_NUMBER
                     WHERE O.USER_NUMBER = #{userNumber}
                     ORDER BY O.ORDER_DATE DESC) S1
<![CDATA[
                WHERE ROWNUM <= #{criteria.page} * #{criteria.amount}
]]>
) S2
        WHERE RNUM >(#{criteria.page} - 1) * #{criteria.amount}
    </select>


    <select id="selectProductReviewInfo" resultType="ProductReviewVo">
        select O.ORDER_NUMBER, O.USER_NUMBER, O.PRODUCT_NUMBER, ORV.REVIEW_NUMBER ,
               O.ORDER_DATE, P.PRODUCT_NAME, ORV.REVIEW_DATE, ORV.REVIEW_CONTENT, ORV.REVIEW_GRADE,
               F.FILE_NAME, F.FILE_UPLOAD_PATH, F.FILE_UUID
        from TBL_ORDER_REVIEW ORV
                 JOIN TBL_ORDER O
                      ON ORV.ORDER_NUMBER = O.ORDER_NUMBER
                 JOIN TBL_PRODUCT P
                      ON O.PRODUCT_NUMBER = P.PRODUCT_NUMBER
                 LEFT JOIN
             (SELECT FILE_NAME, FILE_UPLOAD_PATH, PRODUCT_NUMBER, FILE_UUID
              FROM (
                       SELECT FILE_NAME,FILE_UPLOAD_PATH,FILE_UUID,PRODUCT_NUMBER,
                              RANK() OVER (PARTITION BY PRODUCT_NUMBER ORDER BY FILE_NUMBER) RK
                       FROM TBL_PRODUCT_FILE
                   )
              WHERE RK = 1
             ) F
             ON P.PRODUCT_NUMBER = F.PRODUCT_NUMBER
        WHERE REVIEW_NUMBER = #{reviewNumber}
    </select>


    <update id="updateProductReview">
        update TBL_ORDER_REVIEW
        SET  REVIEW_DATE = SYSDATE,REVIEW_CONTENT = #{reviewContent}, REVIEW_GRADE = #{reviewGrade}
        WHERE REVIEW_NUMBER = #{reviewNumber}
    </update>

    <delete id="deleteProductReview">
        DELETE FROM TBL_ORDER_REVIEW
        WHERE REVIEW_NUMBER = #{reviewNumber}
    </delete>

<!-- 컨설팅 리뷰 리스트 갯수 -->
    <select id="selectConsultingReviewCount" resultType="_int">
        SELECT COUNT(REVIEW_NUMBER)
        FROM TBL_CONSULTING_REVIEW
        WHERE USER_NUMBER = #{userNumber}
    </select>

<!-- 상품 리뷰 리스트 갯수-->
    <select id="selectOrderReviewCount" resultType="_int">
        SELECT COUNT(REVIEW_NUMBER)
        FROM TBL_ORDER_REVIEW
        WHERE USER_NUMBER = #{userNumber}
    </select>


</mapper>